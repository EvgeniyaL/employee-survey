// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace EmployeeSurvey.Repositories.Migrations
{
    [DbContext(typeof(RepositoriesContext))]
    partial class RepositoriesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeeSurvey.Repositories.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentPosition")
                        .IsRequired()
                        .HasColumnName("CurrentPosition")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Hash")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SeniorityLevel")
                        .HasColumnType("int");

                    b.Property<int>("YearsOfExperience")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("YearsOfExperience")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("EmployeeId");

                    b.HasIndex("Hash");

                    b.HasIndex("SeniorityLevel");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeSurvey.Repositories.Entities.EmployeeProgrammingLanguage", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProgrammingLanguageId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "ProgrammingLanguageId");

                    b.HasIndex("ProgrammingLanguageId");

                    b.ToTable("EmployeeProgrammingLanguage");
                });

            modelBuilder.Entity("EmployeeSurvey.Repositories.Entities.ProgrammingLanguage", b =>
                {
                    b.Property<int>("ProgrammingLanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProgrammingLanguageId");

                    b.ToTable("ProgrammingLanguages");

                    b.HasData(
                        new
                        {
                            ProgrammingLanguageId = 1,
                            Name = "C#"
                        },
                        new
                        {
                            ProgrammingLanguageId = 2,
                            Name = "C++"
                        },
                        new
                        {
                            ProgrammingLanguageId = 3,
                            Name = "C"
                        },
                        new
                        {
                            ProgrammingLanguageId = 4,
                            Name = "Java"
                        },
                        new
                        {
                            ProgrammingLanguageId = 5,
                            Name = "Go"
                        },
                        new
                        {
                            ProgrammingLanguageId = 6,
                            Name = "Java Script"
                        },
                        new
                        {
                            ProgrammingLanguageId = 7,
                            Name = "Python"
                        },
                        new
                        {
                            ProgrammingLanguageId = 8,
                            Name = "PHP"
                        },
                        new
                        {
                            ProgrammingLanguageId = 9,
                            Name = "Scala"
                        },
                        new
                        {
                            ProgrammingLanguageId = 10,
                            Name = "Ruby"
                        },
                        new
                        {
                            ProgrammingLanguageId = 11,
                            Name = "Erlang"
                        });
                });

            modelBuilder.Entity("EmployeeSurvey.Repositories.Entities.EmployeeProgrammingLanguage", b =>
                {
                    b.HasOne("EmployeeSurvey.Repositories.Entities.Employee", "Employee")
                        .WithMany("EmployeeProgrammingLanguages")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeSurvey.Repositories.Entities.ProgrammingLanguage", "ProgrammingLanguage")
                        .WithMany("EmployeeProgrammingLanguages")
                        .HasForeignKey("ProgrammingLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
